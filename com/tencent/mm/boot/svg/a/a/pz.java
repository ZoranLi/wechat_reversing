package com.tencent.mm.boot.svg.a.a;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.mm.svg.WeChatSVGRenderC2Java;
import com.tencent.mm.svg.c;
import com.tencent.smtt.sdk.WebView;

public final class pz extends c {
    private final int height = 120;
    private final int width = 120;

    protected final int b(int i, Object... objArr) {
        switch (i) {
            case 0:
                return 120;
            case 1:
                return 120;
            case 2:
                Canvas canvas = (Canvas) objArr[0];
                Looper looper = (Looper) objArr[1];
                Matrix d = c.d(looper);
                float[] c = c.c(looper);
                Paint g = c.g(looper);
                g.setFlags(385);
                g.setStyle(Style.FILL);
                Paint g2 = c.g(looper);
                g2.setFlags(385);
                g2.setStyle(Style.STROKE);
                g.setColor(WebView.NIGHT_MODE_COLOR);
                g2.setStrokeWidth(1.0f);
                g2.setStrokeCap(Cap.BUTT);
                g2.setStrokeJoin(Join.MITER);
                g2.setStrokeMiter(4.0f);
                g2.setPathEffect(null);
                c.a(g2, looper).setStrokeWidth(1.0f);
                canvas.save();
                c = c.a(c, 1.0f, 0.0f, -1843.0f, 0.0f, 1.0f, -1426.0f);
                d.reset();
                d.setValues(c);
                canvas.concat(d);
                canvas.save();
                c = c.a(c, 1.0f, 0.0f, 1772.0f, 0.0f, 1.0f, 1222.0f);
                d.reset();
                d.setValues(c);
                canvas.concat(d);
                canvas.save();
                c = c.a(c, 1.0f, 0.0f, 71.0f, 0.0f, 1.0f, 204.0f);
                d.reset();
                d.setValues(c);
                canvas.concat(d);
                canvas.save();
                Paint a = c.a(g, looper);
                a.setColor(-15028967);
                Path h = c.h(looper);
                h.moveTo(60.0f, 0.0f);
                h.cubicTo(93.137085f, 0.0f, 120.0f, 26.862915f, 120.0f, 60.0f);
                h.cubicTo(120.0f, 93.137085f, 93.137085f, 120.0f, 60.0f, 120.0f);
                h.cubicTo(26.862915f, 120.0f, 0.0f, 93.137085f, 0.0f, 60.0f);
                h.cubicTo(0.0f, 26.862915f, 26.862915f, 0.0f, 60.0f, 0.0f);
                h.close();
                canvas.drawPath(h, a);
                canvas.restore();
                canvas.save();
                a = c.a(g, looper);
                a.setColor(-1);
                h = c.h(looper);
                h.moveTo(73.227135f, 59.73829f);
                h.cubicTo(73.08837f, 52.548607f, 67.2208f, 46.76208f, 59.99774f, 46.76208f);
                h.cubicTo(59.86049f, 46.76208f, 59.724487f, 46.76735f, 59.588238f, 46.772118f);
                h.cubicTo(59.282616f, 46.728207f, 58.966953f, 46.868473f, 58.8031f, 47.152515f);
                h.cubicTo(58.588062f, 47.524887f, 58.71553f, 48.000885f, 59.0879f, 48.215927f);
                h.cubicTo(59.211353f, 48.28719f, 59.345848f, 48.31755f, 59.478836f, 48.317047f);
                h.lineTo(59.478836f, 48.332104f);
                h.cubicTo(59.65097f, 48.324577f, 59.823853f, 48.319054f, 59.99774f, 48.319054f);
                h.cubicTo(66.360634f, 48.319054f, 71.531395f, 53.408516f, 71.66991f, 59.73829f);
                h.lineTo(71.67643f, 59.73829f);
                h.cubicTo(71.67643f, 72.66004f, 66.24421f, 84.30887f, 57.544724f, 92.53988f);
                h.cubicTo(57.311367f, 92.73736f, 57.142998f, 92.9248f, 57.142998f, 93.217125f);
                h.cubicTo(57.142998f, 93.6472f, 57.49153f, 93.995735f, 57.92161f, 93.995735f);
                h.cubicTo(58.225227f, 93.995735f, 58.47364f, 93.80679f, 58.47364f, 93.80679f);
                h.cubicTo(67.55603f, 85.284454f, 73.23366f, 73.17594f, 73.23366f, 59.73829f);
                h.lineTo(73.227135f, 59.73829f);
                h.close();
                h.moveTo(60.776356f, 59.73829f);
                h.cubicTo(60.776356f, 59.30821f, 60.427826f, 58.959675f, 59.99774f, 58.959675f);
                h.cubicTo(59.567913f, 58.959675f, 59.21913f, 59.30821f, 59.21913f, 59.73829f);
                h.cubicTo(59.21913f, 71.85609f, 52.62564f, 82.430466f, 42.832886f, 88.079735f);
                h.cubicTo(42.832886f, 88.079735f, 42.526764f, 88.26918f, 42.518982f, 88.62198f);
                h.cubicTo(42.50945f, 89.05181f, 42.769905f, 89.31979f, 43.20902f, 89.37475f);
                h.cubicTo(43.5159f, 89.41314f, 43.79844f, 89.3208f, 44.088f, 89.14063f);
                h.cubicTo(54.08099f, 83.15663f, 60.776356f, 72.23322f, 60.776356f, 59.73829f);
                h.lineTo(60.776356f, 59.73829f);
                h.close();
                h.moveTo(65.359955f, 77.14328f);
                h.cubicTo(65.51955f, 76.78396f, 65.38931f, 76.35563f, 65.04104f, 76.15464f);
                h.cubicTo(64.66866f, 75.9396f, 64.192665f, 76.06732f, 63.977627f, 76.43969f);
                h.cubicTo(63.95379f, 76.481094f, 63.935722f, 76.524f, 63.920166f, 76.56741f);
                h.lineTo(63.917404f, 76.566154f);
                h.cubicTo(61.239307f, 82.50373f, 57.19017f, 87.689804f, 52.171722f, 91.720116f);
                h.cubicTo(51.911766f, 91.89777f, 51.692963f, 92.11482f, 51.692963f, 92.43851f);
                h.cubicTo(51.692963f, 92.86859f, 52.041492f, 93.217125f, 52.471573f, 93.217125f);
                h.cubicTo(52.738556f, 93.217125f, 53.16663f, 92.92304f, 53.16663f, 92.92304f);
                h.cubicTo(58.38406f, 88.72812f, 62.590023f, 83.327515f, 65.36573f, 77.14554f);
                h.lineTo(65.359955f, 77.14328f);
                h.close();
                h.moveTo(64.92887f, 59.73829f);
                h.lineTo(64.915825f, 59.73829f);
                h.cubicTo(64.77982f, 57.13647f, 62.633434f, 55.066864f, 59.99774f, 55.066864f);
                h.cubicTo(57.362053f, 55.066864f, 55.215664f, 57.13647f, 55.079914f, 59.73829f);
                h.lineTo(55.066864f, 59.73829f);
                h.cubicTo(55.066864f, 71.13293f, 48.388813f, 80.96407f, 38.735073f, 85.542404f);
                h.cubicTo(38.735073f, 85.542404f, 38.276886f, 85.85806f, 38.531826f, 86.461784f);
                h.cubicTo(38.790527f, 87.081314f, 39.574657f, 86.8733f, 39.785934f, 86.760635f);
                h.cubicTo(49.757595f, 81.8556f, 56.624092f, 71.601906f, 56.624092f, 59.73829f);
                h.lineTo(56.63714f, 59.73829f);
                h.cubicTo(56.770126f, 57.996635f, 58.222218f, 56.62409f, 59.99774f, 56.62409f);
                h.cubicTo(61.77352f, 56.62409f, 63.225613f, 57.996635f, 63.3586f, 59.73829f);
                h.lineTo(63.371647f, 59.73829f);
                h.cubicTo(63.371647f, 72.35392f, 57.028328f, 83.48258f, 47.36179f, 90.1255f);
                h.cubicTo(47.005478f, 90.31796f, 46.764843f, 90.57516f, 46.764843f, 90.94326f);
                h.cubicTo(46.764843f, 91.373344f, 47.110615f, 91.6599f, 47.540695f, 91.6599f);
                h.cubicTo(47.77506f, 91.6599f, 48.04154f, 91.54949f, 48.04154f, 91.54949f);
                h.cubicTo(58.230244f, 84.6426f, 64.92887f, 72.9747f, 64.92887f, 59.73829f);
                h.lineTo(64.92887f, 59.73829f);
                h.close();
                h.moveTo(77.37965f, 59.73829f);
                h.cubicTo(77.240135f, 50.255173f, 69.51398f, 42.609566f, 59.99774f, 42.609566f);
                h.cubicTo(50.48176f, 42.609566f, 42.755604f, 50.255173f, 42.61609f, 59.73829f);
                h.lineTo(42.609566f, 59.73829f);
                h.cubicTo(42.609566f, 67.24388f, 37.46992f, 73.54681f, 30.518614f, 75.32534f);
                h.cubicTo(30.510836f, 75.32685f, 30.50356f, 75.329605f, 30.49603f, 75.33137f);
                h.cubicTo(30.472696f, 75.33739f, 30.450113f, 75.34441f, 30.427029f, 75.35018f);
                h.lineTo(30.42778f, 75.35269f);
                h.cubicTo(30.117891f, 75.45532f, 29.892815f, 75.74413f, 29.892815f, 76.0884f);
                h.cubicTo(29.892815f, 76.51848f, 30.241344f, 76.86701f, 30.671427f, 76.86701f);
                h.cubicTo(30.778318f, 76.86701f, 30.880194f, 76.84543f, 30.973036f, 76.80629f);
                h.lineTo(30.974289f, 76.809296f);
                h.cubicTo(38.562187f, 74.83429f, 44.16679f, 67.94471f, 44.16679f, 59.73829f);
                h.lineTo(44.173317f, 59.73829f);
                h.cubicTo(44.312576f, 51.115337f, 51.34167f, 44.16679f, 59.99774f, 44.16679f);
                h.cubicTo(68.65407f, 44.16679f, 75.68316f, 51.115337f, 75.822426f, 59.73829f);
                h.lineTo(75.82895f, 59.73829f);
                h.cubicTo(75.82895f, 72.42694f, 71.03231f, 83.99271f, 63.158363f, 92.73109f);
                h.cubicTo(63.158363f, 92.73109f, 62.977448f, 92.98953f, 62.977448f, 93.217125f);
                h.cubicTo(62.977448f, 93.6472f, 63.32598f, 93.995735f, 63.75606f, 93.995735f);
                h.cubicTo(64.12141f, 93.995735f, 64.38337f, 93.73202f, 64.644325f, 93.40356f);
                h.cubicTo(72.57097f, 84.43383f, 77.38617f, 72.64976f, 77.38617f, 59.73829f);
                h.lineTo(77.37965f, 59.73829f);
                h.close();
                h.moveTo(93.99248f, 59.73829f);
                h.cubicTo(93.91996f, 50.040634f, 89.786514f, 41.31054f, 83.20983f, 35.16068f);
                h.lineTo(83.20883f, 35.161682f);
                h.cubicTo(83.01863f, 34.963955f, 82.73208f, 34.87011f, 82.44803f, 34.94614f);
                h.cubicTo(82.03275f, 35.05755f, 81.78635f, 35.484367f, 81.89751f, 35.8999f);
                h.cubicTo(81.93239f, 36.029373f, 82.00039f, 36.13978f, 82.08645f, 36.23086f);
                h.lineTo(82.08018f, 36.236885f);
                h.cubicTo(88.39138f, 42.105713f, 92.36248f, 50.457165f, 92.43525f, 59.73829f);
                h.lineTo(92.438515f, 59.73829f);
                h.cubicTo(92.438515f, 64.52865f, 91.91985f, 69.196815f, 90.94929f, 73.697105f);
                h.cubicTo(90.86071f, 74.12342f, 90.85569f, 74.79088f, 91.66015f, 74.79088f);
                h.cubicTo(92.02198f, 74.79088f, 92.34542f, 74.599174f, 92.438515f, 74.19343f);
                h.cubicTo(93.44621f, 69.576706f, 93.98495f, 64.78484f, 93.99423f, 59.868015f);
                h.cubicTo(93.99398f, 59.824604f, 93.99272f, 59.781696f, 93.99248f, 59.73829f);
                h.lineTo(93.99248f, 59.73829f);
                h.close();
                h.moveTo(85.68443f, 59.73829f);
                h.cubicTo(85.54442f, 45.66856f, 74.10059f, 34.304783f, 59.99774f, 34.304783f);
                h.cubicTo(50.529686f, 34.304783f, 42.264046f, 39.42937f, 37.808918f, 47.053654f);
                h.cubicTo(37.765507f, 47.108105f, 37.731133f, 47.168076f, 37.704033f, 47.231056f);
                h.cubicTo(37.68998f, 47.255646f, 37.674923f, 47.279484f, 37.661125f, 47.304073f);
                h.lineTo(37.678688f, 47.28099f);
                h.lineTo(37.68446f, 47.284f);
                h.cubicTo(37.613197f, 47.490005f, 37.62524f, 47.723366f, 37.742672f, 47.926865f);
                h.cubicTo(37.957714f, 48.299232f, 38.433964f, 48.426952f, 38.806335f, 48.21191f);
                h.cubicTo(38.912224f, 48.15069f, 38.99578f, 48.06688f, 39.060017f, 47.97178f);
                h.lineTo(39.0698f, 47.976795f);
                h.cubicTo(43.235115f, 40.737183f, 51.04558f, 35.862007f, 59.99774f, 35.862007f);
                h.cubicTo(73.240685f, 35.862007f, 83.98744f, 46.528473f, 84.127205f, 59.73829f);
                h.lineTo(84.13047f, 59.73829f);
                h.cubicTo(84.13097f, 59.824856f, 84.13373f, 59.910923f, 84.13373f, 59.99774f);
                h.cubicTo(84.13373f, 69.94506f, 81.587364f, 79.29167f, 77.13174f, 87.44591f);
                h.cubicTo(77.01305f, 87.66797f, 76.88634f, 87.92341f, 76.93978f, 88.258644f);
                h.cubicTo(77.00753f, 88.68346f, 77.50486f, 88.80515f, 77.64562f, 88.80515f);
                h.cubicTo(78.02527f, 88.80515f, 78.20493f, 88.56753f, 78.40943f, 88.17358f);
                h.cubicTo(83.04447f, 79.7338f, 85.690956f, 70.046936f, 85.690956f, 59.73829f);
                h.lineTo(85.68443f, 59.73829f);
                h.close();
                h.moveTo(81.53191f, 59.73829f);
                h.cubicTo(81.47847f, 55.233727f, 80.03616f, 51.067158f, 77.62254f, 47.63253f);
                h.cubicTo(77.60598f, 47.557003f, 77.58114f, 47.482227f, 77.54049f, 47.41147f);
                h.cubicTo(77.32545f, 47.0391f, 76.8492f, 46.911633f, 76.47683f, 47.12667f);
                h.cubicTo(76.10446f, 47.341713f, 75.97699f, 47.81771f, 76.19203f, 48.190083f);
                h.cubicTo(76.20683f, 48.215927f, 76.225655f, 48.237507f, 76.242966f, 48.26084f);
                h.lineTo(76.19328f, 48.303497f);
                h.cubicTo(78.52335f, 51.526848f, 79.920235f, 55.469593f, 79.97494f, 59.73829f);
                h.lineTo(79.98146f, 59.73829f);
                h.cubicTo(79.98146f, 71.53541f, 76.15314f, 82.43448f, 69.68109f, 91.27624f);
                h.cubicTo(69.47484f, 91.536446f, 69.33482f, 91.77883f, 69.35766f, 92.031265f);
                h.cubicTo(69.39605f, 92.45959f, 69.68938f, 92.69821f, 70.11945f, 92.69821f);
                h.cubicTo(70.551796f, 92.69821f, 70.94248f, 92.195114f, 70.94624f, 92.19361f);
                h.cubicTo(77.60448f, 83.09491f, 81.53844f, 71.876915f, 81.53844f, 59.73829f);
                h.lineTo(81.53191f, 59.73829f);
                h.close();
                h.moveTo(89.79604f, 58.44077f);
                h.lineTo(89.78827f, 58.44077f);
                h.cubicTo(89.78852f, 58.30803f, 89.758156f, 58.173534f, 89.68715f, 58.05033f);
                h.cubicTo(89.47211f, 57.677963f, 88.99586f, 57.550495f, 88.62348f, 57.765285f);
                h.cubicTo(88.37382f, 57.909565f, 88.23731f, 58.171528f, 88.237564f, 58.44077f);
                h.lineTo(88.23707f, 58.44077f);
                h.cubicTo(88.237564f, 58.44679f, 88.237564f, 58.452812f, 88.23807f, 58.458836f);
                h.cubicTo(88.23857f, 58.487186f, 88.237816f, 58.515293f, 88.24183f, 58.543396f);
                h.cubicTo(88.26191f, 58.939854f, 88.275955f, 59.337814f, 88.279724f, 59.73829f);
                h.lineTo(88.28625f, 59.73829f);
                h.cubicTo(88.28625f, 67.344505f, 86.906425f, 74.62727f, 84.391426f, 81.35626f);
                h.cubicTo(84.391426f, 81.35626f, 84.11215f, 82.31705f, 85.1718f, 82.31705f);
                h.cubicTo(85.56323f, 82.31705f, 85.77777f, 82.02397f, 85.93912f, 81.6516f);
                h.cubicTo(88.45888f, 74.82199f, 89.84347f, 67.44286f, 89.84347f, 59.73829f);
                h.lineTo(89.83669f, 59.73829f);
                h.cubicTo(89.83318f, 59.30319f, 89.81813f, 58.8711f, 89.79604f, 58.44077f);
                h.lineTo(89.79604f, 58.44077f);
                h.close();
                h.moveTo(59.99774f, 30.152266f);
                h.cubicTo(59.562897f, 30.152266f, 59.130554f, 30.163557f, 58.700222f, 30.182125f);
                h.lineTo(58.700222f, 30.19442f);
                h.cubicTo(58.567486f, 30.19417f, 58.433243f, 30.224281f, 58.31004f, 30.295542f);
                h.cubicTo(57.93742f, 30.510584f, 57.80995f, 30.986584f, 58.02499f, 31.359203f);
                h.cubicTo(58.191605f, 31.647764f, 58.514793f, 31.786776f, 58.82543f, 31.735838f);
                h.cubicTo(59.214363f, 31.719778f, 59.604797f, 31.709492f, 59.99774f, 31.709492f);
                h.cubicTo(73.359116f, 31.709492f, 84.55252f, 40.9738f, 87.51391f, 53.42884f);
                h.lineTo(87.514404f, 53.42884f);
                h.cubicTo(87.530716f, 53.508636f, 87.55631f, 53.587677f, 87.59947f, 53.6622f);
                h.cubicTo(87.814514f, 54.03457f, 88.29051f, 54.162037f, 88.66288f, 53.946995f);
                h.cubicTo(88.93714f, 53.788666f, 89.077156f, 53.48881f, 89.04679f, 53.192974f);
                h.lineTo(89.05683f, 53.191467f);
                h.cubicTo(85.97751f, 39.988426f, 74.138985f, 30.152266f, 59.99774f, 30.152266f);
                h.lineTo(59.99774f, 30.152266f);
                h.close();
                h.moveTo(26.778364f, 60.5169f);
                h.cubicTo(27.54167f, 60.5169f, 27.560238f, 59.73829f, 27.560238f, 59.73829f);
                h.cubicTo(27.63426f, 50.32267f, 31.71953f, 41.86307f, 38.19057f, 35.9827f);
                h.lineTo(38.162716f, 35.948074f);
                h.cubicTo(38.340874f, 35.805298f, 38.45705f, 35.588753f, 38.45705f, 35.34285f);
                h.cubicTo(38.45705f, 34.91277f, 38.108517f, 34.564236f, 37.678688f, 34.564236f);
                h.cubicTo(37.389374f, 34.564236f, 37.139957f, 34.723824f, 37.005714f, 34.957935f);
                h.cubicTo(30.301817f, 41.117832f, 26.076532f, 49.93349f, 26.003263f, 59.73829f);
                h.cubicTo(26.003263f, 60.181416f, 26.2848f, 60.5169f, 26.778364f, 60.5169f);
                h.lineTo(26.778364f, 60.5169f);
                h.close();
                h.moveTo(31.709494f, 59.73829f);
                h.lineTo(31.716017f, 59.73829f);
                h.cubicTo(31.83646f, 46.40301f, 41.180313f, 35.271084f, 53.67876f, 32.4186f);
                h.lineTo(53.676502f, 32.404045f);
                h.cubicTo(53.75228f, 32.38748f, 53.82731f, 32.36264f, 53.898067f, 32.321743f);
                h.cubicTo(54.27044f, 32.1067f, 54.398155f, 31.630701f, 54.183117f, 31.258331f);
                h.cubicTo(53.986393f, 30.91758f, 53.57187f, 30.785091f, 53.217567f, 30.929121f);
                h.cubicTo(40.083782f, 33.981342f, 30.278984f, 45.70319f, 30.158792f, 59.73829f);
                h.lineTo(30.152267f, 59.73829f);
                h.cubicTo(30.152267f, 61.657345f, 28.663544f, 63.225105f, 26.778364f, 63.358597f);
                h.cubicTo(25.99147f, 63.358597f, 26.000002f, 64.15026f, 26.000002f, 64.15026f);
                h.cubicTo(26.000002f, 64.58034f, 26.346275f, 64.91758f, 26.995663f, 64.89424f);
                h.cubicTo(29.637123f, 64.65235f, 31.709494f, 62.44298f, 31.709494f, 59.73829f);
                h.lineTo(31.709494f, 59.73829f);
                h.close();
                h.moveTo(44.77051f, 78.134674f);
                h.cubicTo(44.796608f, 78.102806f, 44.8222f, 78.07018f, 44.84353f, 78.03355f);
                h.cubicTo(45.05857f, 77.66118f, 44.93085f, 77.18493f, 44.558483f, 76.96989f);
                h.cubicTo(44.18611f, 76.75485f, 43.70986f, 76.88257f, 43.49482f, 77.25494f);
                h.cubicTo(43.490807f, 77.262215f, 43.4888f, 77.26999f, 43.484783f, 77.27752f);
                h.lineTo(43.471737f, 77.26874f);
                h.cubicTo(41.251575f, 79.41488f, 38.627678f, 81.14624f, 35.721493f, 82.33135f);
                h.cubicTo(35.336327f, 82.4666f, 35.083397f, 82.71375f, 35.083397f, 83.09566f);
                h.cubicTo(35.083397f, 83.52574f, 35.431927f, 83.874275f, 35.86201f, 83.874275f);
                h.cubicTo(36.001774f, 83.874275f, 36.252445f, 83.791214f, 36.252445f, 83.791214f);
                h.cubicTo(39.47153f, 82.48743f, 42.36818f, 80.55557f, 44.79435f, 78.15048f);
                h.lineTo(44.77051f, 78.134674f);
                h.close();
                h.moveTo(42.609566f, 32.488102f);
                h.cubicTo(42.806793f, 32.488102f, 42.984695f, 32.412323f, 43.121952f, 32.29138f);
                h.cubicTo(48.038776f, 29.289595f, 53.815266f, 27.556974f, 59.99774f, 27.556974f);
                h.cubicTo(66.351105f, 27.556974f, 72.276886f, 29.384693f, 77.28028f, 32.541046f);
                h.lineTo(77.28881f, 32.529255f);
                h.cubicTo(77.46672f, 32.643173f, 77.68853f, 32.686584f, 77.90859f, 32.627617f);
                h.cubicTo(78.32387f, 32.516457f, 78.570274f, 32.089638f, 78.459114f, 31.67411f);
                h.cubicTo(78.393875f, 31.430967f, 78.21923f, 31.248547f, 78.00344f, 31.158966f);
                h.cubicTo(72.782f, 27.891705f, 66.61181f, 26.0f, 59.99774f, 26.0f);
                h.cubicTo(53.506126f, 26.0f, 47.44058f, 27.820944f, 42.28136f, 30.9778f);
                h.lineTo(42.29315f, 30.99938f);
                h.cubicTo(42.021152f, 31.120827f, 41.830956f, 31.392576f, 41.830956f, 31.709492f);
                h.cubicTo(41.830956f, 32.13932f, 42.179485f, 32.488102f, 42.609566f, 32.488102f);
                h.lineTo(42.609566f, 32.488102f);
                h.close();
                h.moveTo(65.77298f, 73.64943f);
                h.cubicTo(66.14535f, 73.86447f, 66.621346f, 73.73701f, 66.83639f, 73.36463f);
                h.cubicTo(66.84165f, 73.3556f, 66.84416f, 73.34632f, 66.84868f, 73.33729f);
                h.lineTo(66.85646f, 73.34004f);
                h.cubicTo(66.86449f, 73.315956f, 66.87202f, 73.29162f, 66.88004f, 73.267525f);
                h.cubicTo(66.89435f, 73.2329f, 66.90564f, 73.19802f, 66.91442f, 73.16264f);
                h.cubicTo(68.31708f, 68.94212f, 69.08114f, 64.43004f, 69.08114f, 59.73829f);
                h.lineTo(69.074615f, 59.73829f);
                h.cubicTo(68.93686f, 54.842037f, 64.92737f, 50.91435f, 59.99774f, 50.91435f);
                h.cubicTo(55.06812f, 50.91435f, 51.058628f, 54.842037f, 50.92087f, 59.73829f);
                h.lineTo(50.91435f, 59.73829f);
                h.cubicTo(50.91435f, 65.376015f, 48.998554f, 70.562836f, 45.786247f, 74.69227f);
                h.lineTo(45.808075f, 74.70331f);
                h.cubicTo(45.6244f, 75.0689f, 45.75262f, 75.5183f, 46.11169f, 75.725815f);
                h.cubicTo(46.484062f, 75.940605f, 46.96006f, 75.81313f, 47.175102f, 75.440765f);
                h.cubicTo(47.18338f, 75.42647f, 47.187897f, 75.411156f, 47.195175f, 75.39661f);
                h.lineTo(47.2027f, 75.40037f);
                h.cubicTo(50.507103f, 71.048874f, 52.471573f, 65.62518f, 52.471573f, 59.73829f);
                h.lineTo(52.484623f, 59.73829f);
                h.cubicTo(52.62263f, 55.702953f, 55.928783f, 52.471573f, 59.99774f, 52.471573f);
                h.cubicTo(64.066956f, 52.471573f, 67.37311f, 55.702953f, 67.511116f, 59.73829f);
                h.lineTo(67.52416f, 59.73829f);
                h.cubicTo(67.52416f, 64.30357f, 66.77441f, 68.69221f, 65.39684f, 72.792786f);
                h.lineTo(65.40788f, 72.79705f);
                h.cubicTo(65.3311f, 73.12274f, 65.4681f, 73.47353f, 65.77298f, 73.64943f);
                h.lineTo(65.77298f, 73.64943f);
                h.close();
                h.moveTo(40.014275f, 59.73829f);
                h.lineTo(40.020798f, 59.73829f);
                h.cubicTo(40.160564f, 48.821903f, 49.048237f, 40.014275f, 59.99774f, 40.014275f);
                h.cubicTo(65.29246f, 40.014275f, 70.100136f, 42.078865f, 73.67452f, 45.44022f);
                h.cubicTo(73.91265f, 45.725773f, 74.32718f, 45.808826f, 74.66015f, 45.61662f);
                h.cubicTo(75.03252f, 45.40158f, 75.15999f, 44.92558f, 74.94495f, 44.55321f);
                h.cubicTo(74.91057f, 44.493492f, 74.86766f, 44.442554f, 74.82124f, 44.39588f);
                h.lineTo(74.82952f, 44.3876f);
                h.cubicTo(70.967575f, 40.7151f, 65.74838f, 38.457047f, 59.99774f, 38.457047f);
                h.cubicTo(48.188328f, 38.457047f, 38.603336f, 47.961994f, 38.463825f, 59.73829f);
                h.lineTo(38.45705f, 59.73829f);
                h.cubicTo(38.45705f, 65.50524f, 34.36551f, 70.30915f, 28.92877f, 71.4245f);
                h.cubicTo(28.307987f, 71.54093f, 28.005625f, 71.81293f, 28.094954f, 72.39607f);
                h.cubicTo(28.20837f, 73.13605f, 29.004799f, 73.0013f, 29.004799f, 73.0013f);
                h.cubicTo(35.270084f, 71.83401f, 40.014275f, 66.34181f, 40.014275f, 59.73829f);
                h.lineTo(40.014275f, 59.73829f);
                h.close();
                h.moveTo(35.86201f, 59.73829f);
                h.lineTo(35.868534f, 59.73829f);
                h.cubicTo(35.89287f, 57.430805f, 36.241905f, 55.20136f, 36.87047f, 53.092354f);
                h.lineTo(36.85215f, 53.08257f);
                h.cubicTo(36.974598f, 52.853226f, 36.981373f, 52.56868f, 36.84186f, 52.32679f);
                h.cubicTo(36.62682f, 51.954422f, 36.15082f, 51.826954f, 35.778454f, 52.041992f);
                h.cubicTo(35.651485f, 52.11501f, 35.555885f, 52.2199f, 35.48964f, 52.339336f);
                h.lineTo(35.474834f, 52.331306f);
                h.cubicTo(35.463043f, 52.369194f, 35.453007f, 52.407837f, 35.44121f, 52.445976f);
                h.cubicTo(35.42741f, 52.483116f, 35.41612f, 52.5205f, 35.40809f, 52.559143f);
                h.cubicTo(34.720562f, 54.835514f, 34.33615f, 57.243366f, 34.31131f, 59.73829f);
                h.lineTo(34.304783f, 59.73829f);
                h.cubicTo(34.304783f, 63.84363f, 31.126348f, 67.20323f, 27.096785f, 67.49907f);
                h.cubicTo(27.096785f, 67.49907f, 26.466969f, 67.61173f, 26.51891f, 68.30277f);
                h.cubicTo(26.572355f, 69.01088f, 27.314585f, 69.03697f, 27.621212f, 69.00887f);
                h.cubicTo(32.26077f, 68.462616f, 35.86201f, 64.524635f, 35.86201f, 59.73829f);
                h.lineTo(35.86201f, 59.73829f);
                h.close();
                h.moveTo(48.319057f, 59.73829f);
                h.lineTo(48.32558f, 59.73829f);
                h.cubicTo(48.43097f, 54.931618f, 51.439278f, 50.842834f, 55.66657f, 49.15212f);
                h.lineTo(55.65578f, 49.092148f);
                h.cubicTo(55.90018f, 49.07082f, 56.130775f, 48.935574f, 56.262512f, 48.70698f);
                h.cubicTo(56.47755f, 48.334614f, 56.350082f, 47.85836f, 55.977715f, 47.643322f);
                h.cubicTo(55.69969f, 47.482983f, 55.363956f, 47.513596f, 55.122066f, 47.69426f);
                h.cubicTo(50.303856f, 49.60629f, 46.874245f, 54.26341f, 46.76861f, 59.73829f);
                h.lineTo(46.762085f, 59.73829f);
                h.cubicTo(46.762085f, 68.66159f, 40.984592f, 76.22842f, 32.968872f, 78.92232f);
                h.cubicTo(32.968872f, 78.92232f, 32.278584f, 79.12883f, 32.495132f, 79.86327f);
                h.cubicTo(32.70942f, 80.58995f, 33.587646f, 80.36512f, 33.80294f, 80.28407f);
                h.cubicTo(42.25953f, 77.2858f, 48.319057f, 69.22266f, 48.319057f, 59.73829f);
                h.lineTo(48.319057f, 59.73829f);
                h.close();
                WeChatSVGRenderC2Java.setFillType(h, 2);
                canvas.drawPath(h, a);
                canvas.restore();
                canvas.restore();
                canvas.restore();
                canvas.restore();
                c.f(looper);
                break;
        }
        return 0;
    }
}
