package com.tencent.mm.boot.svg.a.a;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.mm.svg.WeChatSVGRenderC2Java;
import com.tencent.mm.svg.c;
import com.tencent.smtt.sdk.WebView;

public final class aa extends c {
    private final int height = 96;
    private final int width = 96;

    protected final int b(int i, Object... objArr) {
        switch (i) {
            case 0:
                return 96;
            case 1:
                return 96;
            case 2:
                Canvas canvas = (Canvas) objArr[0];
                Looper looper = (Looper) objArr[1];
                Matrix d = c.d(looper);
                float[] c = c.c(looper);
                Paint g = c.g(looper);
                g.setFlags(385);
                g.setStyle(Style.FILL);
                Paint g2 = c.g(looper);
                g2.setFlags(385);
                g2.setStyle(Style.STROKE);
                g.setColor(WebView.NIGHT_MODE_COLOR);
                g2.setStrokeWidth(1.0f);
                g2.setStrokeCap(Cap.BUTT);
                g2.setStrokeJoin(Join.MITER);
                g2.setStrokeMiter(4.0f);
                g2.setPathEffect(null);
                c.a(g2, looper).setStrokeWidth(1.0f);
                canvas.save();
                Paint a = c.a(g, looper);
                a.setColor(-1);
                c = c.a(c, 1.0f, 0.0f, 14.0f, 0.0f, 1.0f, 15.0f);
                d.reset();
                d.setValues(c);
                canvas.concat(d);
                canvas.save();
                Paint a2 = c.a(a, looper);
                Path h = c.h(looper);
                h.moveTo(34.0f, 48.0f);
                h.cubicTo(42.28427f, 48.0f, 49.0f, 41.28427f, 49.0f, 33.0f);
                h.cubicTo(49.0f, 24.715729f, 42.28427f, 18.0f, 34.0f, 18.0f);
                h.cubicTo(25.715729f, 18.0f, 19.0f, 24.715729f, 19.0f, 33.0f);
                h.cubicTo(19.0f, 41.28427f, 25.715729f, 48.0f, 34.0f, 48.0f);
                h.lineTo(34.0f, 48.0f);
                h.close();
                h.moveTo(12.844062f, 44.342445f);
                h.cubicTo(12.123246f, 43.000797f, 11.526326f, 41.582676f, 11.068608f, 40.103394f);
                h.lineTo(11.068608f, 40.103394f);
                h.lineTo(8.723242f, 39.944252f);
                h.cubicTo(4.1690254f, 39.63523f, 0.5f, 37.468525f, 0.5f, 35.102856f);
                h.lineTo(0.5f, 31.897268f);
                h.cubicTo(0.5f, 29.531496f, 4.1816707f, 27.364037f, 8.723242f, 27.055876f);
                h.lineTo(10.777766f, 26.91647f);
                h.cubicTo(11.389548f, 24.5747f, 12.346177f, 22.372328f, 13.590143f, 20.366861f);
                h.lineTo(12.469355f, 19.082901f);
                h.cubicTo(9.467547f, 15.6440735f, 8.405248f, 11.517588f, 10.078027f, 9.84481f);
                h.lineTo(12.34472f, 7.5781155f);
                h.cubicTo(14.017574f, 5.905261f, 18.153534f, 6.975971f, 21.582811f, 9.969443f);
                h.lineTo(23.331303f, 11.4957285f);
                h.cubicTo(24.638212f, 10.846095f, 26.01274f, 10.312093f, 27.441494f, 9.90711f);
                h.lineTo(27.441494f, 9.90711f);
                h.lineTo(27.55575f, 8.223242f);
                h.cubicTo(27.864769f, 3.6690252f, 30.031477f, 0.0f, 32.397144f, 0.0f);
                h.lineTo(35.60273f, 0.0f);
                h.cubicTo(37.968506f, 0.0f, 40.135963f, 3.681671f, 40.444126f, 8.223242f);
                h.lineTo(40.55838f, 9.907074f);
                h.cubicTo(42.525105f, 10.464534f, 44.389076f, 11.266463f, 46.115383f, 12.277946f);
                h.cubicTo(50.1995f, 8.655162f, 54.81935f, 7.085332f, 56.48362f, 8.749599f);
                h.lineTo(58.750313f, 11.016294f);
                h.cubicTo(60.423164f, 12.689147f, 58.81844f, 17.359123f, 55.16622f, 21.447145f);
                h.lineTo(55.088913f, 21.533678f);
                h.cubicTo(56.025063f, 23.251804f, 56.757362f, 25.097008f, 57.253334f, 27.036797f);
                h.lineTo(57.253334f, 27.036797f);
                h.lineTo(57.58994f, 27.05575f);
                h.cubicTo(63.078354f, 27.364769f, 67.5f, 29.531477f, 67.5f, 31.897142f);
                h.lineTo(67.5f, 35.10273f);
                h.cubicTo(67.5f, 37.468506f, 63.063114f, 39.635963f, 57.58994f, 39.944126f);
                h.lineTo(56.96949f, 39.979057f);
                h.cubicTo(56.493126f, 41.548916f, 55.860233f, 43.050686f, 55.088978f, 44.466206f);
                h.lineTo(55.166313f, 44.552765f);
                h.cubicTo(58.828697f, 48.652172f, 60.42318f, 53.31084f, 58.7504f, 54.98362f);
                h.lineTo(56.483707f, 57.250313f);
                h.cubicTo(54.81939f, 58.914627f, 50.18847f, 57.334736f, 46.115498f, 53.721985f);
                h.lineTo(46.115498f, 53.721985f);
                h.cubicTo(44.35521f, 54.753395f, 42.451775f, 55.566917f, 40.44222f, 56.125534f);
                h.lineTo(40.44222f, 56.125534f);
                h.cubicTo(40.12586f, 61.597458f, 37.963406f, 66.0f, 35.602856f, 66.0f);
                h.lineTo(32.39727f, 66.0f);
                h.cubicTo(30.03663f, 66.0f, 27.873447f, 61.582355f, 27.557909f, 56.12557f);
                h.cubicTo(25.59333f, 55.579468f, 23.730177f, 54.78974f, 22.003038f, 53.790985f);
                h.lineTo(20.582901f, 55.030643f);
                h.cubicTo(17.144073f, 58.03245f, 13.017588f, 59.094753f, 11.34481f, 57.421974f);
                h.lineTo(9.078115f, 55.15528f);
                h.cubicTo(7.405261f, 53.482426f, 8.475971f, 49.346466f, 11.469443f, 45.917187f);
                h.lineTo(12.844062f, 44.342445f);
                h.lineTo(12.844062f, 44.342445f);
                h.close();
                WeChatSVGRenderC2Java.setFillType(h, 2);
                canvas.drawPath(h, a2);
                canvas.restore();
                canvas.save();
                a2 = c.a(a, looper);
                h = c.h(looper);
                h.moveTo(34.0f, 48.0f);
                h.cubicTo(42.28427f, 48.0f, 49.0f, 41.28427f, 49.0f, 33.0f);
                h.cubicTo(49.0f, 24.715729f, 42.28427f, 18.0f, 34.0f, 18.0f);
                h.cubicTo(25.715729f, 18.0f, 19.0f, 24.715729f, 19.0f, 33.0f);
                h.cubicTo(19.0f, 41.28427f, 25.715729f, 48.0f, 34.0f, 48.0f);
                h.lineTo(34.0f, 48.0f);
                h.close();
                h.moveTo(12.844062f, 44.342445f);
                h.cubicTo(12.123246f, 43.000797f, 11.526326f, 41.582676f, 11.068608f, 40.103394f);
                h.lineTo(11.068608f, 40.103394f);
                h.lineTo(8.723242f, 39.944252f);
                h.cubicTo(4.1690254f, 39.63523f, 0.5f, 37.468525f, 0.5f, 35.102856f);
                h.lineTo(0.5f, 31.897268f);
                h.cubicTo(0.5f, 29.531496f, 4.1816707f, 27.364037f, 8.723242f, 27.055876f);
                h.lineTo(10.777766f, 26.91647f);
                h.cubicTo(11.389548f, 24.5747f, 12.346177f, 22.372328f, 13.590143f, 20.366861f);
                h.lineTo(12.469355f, 19.082901f);
                h.cubicTo(9.467547f, 15.6440735f, 8.405248f, 11.517588f, 10.078027f, 9.84481f);
                h.lineTo(12.34472f, 7.5781155f);
                h.cubicTo(14.017574f, 5.905261f, 18.153534f, 6.975971f, 21.582811f, 9.969443f);
                h.lineTo(23.331303f, 11.4957285f);
                h.cubicTo(24.638212f, 10.846095f, 26.01274f, 10.312093f, 27.441494f, 9.90711f);
                h.lineTo(27.441494f, 9.90711f);
                h.lineTo(27.55575f, 8.223242f);
                h.cubicTo(27.864769f, 3.6690252f, 30.031477f, 0.0f, 32.397144f, 0.0f);
                h.lineTo(35.60273f, 0.0f);
                h.cubicTo(37.968506f, 0.0f, 40.135963f, 3.681671f, 40.444126f, 8.223242f);
                h.lineTo(40.55838f, 9.907074f);
                h.cubicTo(42.525105f, 10.464534f, 44.389076f, 11.266463f, 46.115383f, 12.277946f);
                h.cubicTo(50.1995f, 8.655162f, 54.81935f, 7.085332f, 56.48362f, 8.749599f);
                h.lineTo(58.750313f, 11.016294f);
                h.cubicTo(60.423164f, 12.689147f, 58.81844f, 17.359123f, 55.16622f, 21.447145f);
                h.lineTo(55.088913f, 21.533678f);
                h.cubicTo(56.025063f, 23.251804f, 56.757362f, 25.097008f, 57.253334f, 27.036797f);
                h.lineTo(57.253334f, 27.036797f);
                h.lineTo(57.58994f, 27.05575f);
                h.cubicTo(63.078354f, 27.364769f, 67.5f, 29.531477f, 67.5f, 31.897142f);
                h.lineTo(67.5f, 35.10273f);
                h.cubicTo(67.5f, 37.468506f, 63.063114f, 39.635963f, 57.58994f, 39.944126f);
                h.lineTo(56.96949f, 39.979057f);
                h.cubicTo(56.493126f, 41.548916f, 55.860233f, 43.050686f, 55.088978f, 44.466206f);
                h.lineTo(55.166313f, 44.552765f);
                h.cubicTo(58.828697f, 48.652172f, 60.42318f, 53.31084f, 58.7504f, 54.98362f);
                h.lineTo(56.483707f, 57.250313f);
                h.cubicTo(54.81939f, 58.914627f, 50.18847f, 57.334736f, 46.115498f, 53.721985f);
                h.lineTo(46.115498f, 53.721985f);
                h.cubicTo(44.35521f, 54.753395f, 42.451775f, 55.566917f, 40.44222f, 56.125534f);
                h.lineTo(40.44222f, 56.125534f);
                h.cubicTo(40.12586f, 61.597458f, 37.963406f, 66.0f, 35.602856f, 66.0f);
                h.lineTo(32.39727f, 66.0f);
                h.cubicTo(30.03663f, 66.0f, 27.873447f, 61.582355f, 27.557909f, 56.12557f);
                h.cubicTo(25.59333f, 55.579468f, 23.730177f, 54.78974f, 22.003038f, 53.790985f);
                h.lineTo(20.582901f, 55.030643f);
                h.cubicTo(17.144073f, 58.03245f, 13.017588f, 59.094753f, 11.34481f, 57.421974f);
                h.lineTo(9.078115f, 55.15528f);
                h.cubicTo(7.405261f, 53.482426f, 8.475971f, 49.346466f, 11.469443f, 45.917187f);
                h.lineTo(12.844062f, 44.342445f);
                h.lineTo(12.844062f, 44.342445f);
                h.close();
                WeChatSVGRenderC2Java.setFillType(h, 2);
                canvas.drawPath(h, a2);
                canvas.restore();
                canvas.restore();
                c.f(looper);
                break;
        }
        return 0;
    }
}
